[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\GIT\esp32-idf\Potentio_ESP\build\bootloader\esp-idf\esptool_py && D:\ESP_IDF_V5_1\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/GIT/esp32-idf/Potentio_ESP/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart_user.c.obj
In file included from D:/GIT/esp32-idf/Potentio_ESP/main/header.h:21,
                 from D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.h:4,
                 from D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:1:
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c: In function 'uart_user_task':
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:65: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                                                                 ^
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:410:137: note: in definition of macro 'ESP_LOG_LEVEL'
  410 |         if (level==ESP_LOG_ERROR )          { esp_log_write(ESP_LOG_ERROR,      tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:342:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  342 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:17: note: in expansion of macro 'ESP_LOGI'
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                 ^~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:65: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                                                                 ^
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:411:137: note: in definition of macro 'ESP_LOG_LEVEL'
  411 |         else if (level==ESP_LOG_WARN )      { esp_log_write(ESP_LOG_WARN,       tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:342:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  342 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:17: note: in expansion of macro 'ESP_LOGI'
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                 ^~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:65: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                                                                 ^
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:412:137: note: in definition of macro 'ESP_LOG_LEVEL'
  412 |         else if (level==ESP_LOG_DEBUG )     { esp_log_write(ESP_LOG_DEBUG,      tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:342:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  342 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:17: note: in expansion of macro 'ESP_LOGI'
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                 ^~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:65: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                                                                 ^
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:413:137: note: in definition of macro 'ESP_LOG_LEVEL'
  413 |         else if (level==ESP_LOG_VERBOSE )   { esp_log_write(ESP_LOG_VERBOSE,    tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:342:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  342 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:17: note: in expansion of macro 'ESP_LOGI'
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                 ^~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:65: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                                                                 ^
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:414:137: note: in definition of macro 'ESP_LOG_LEVEL'
  414 |         else                                { esp_log_write(ESP_LOG_INFO,       tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                                                         ^~~~~~~~~~~
D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/log/include/esp_log.h:342:38: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  342 | #define ESP_LOGI( tag, format, ... ) ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO,    tag, format, ##__VA_ARGS__)
      |                                      ^~~~~~~~~~~~~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:54:17: note: in expansion of macro 'ESP_LOGI'
   54 |                 ESP_LOGI(TAG, "Data from STM: %s, MSG_Size:%d", (char *)RxBuffer[0], 1);
      |                 ^~~~~~~~
D:/GIT/esp32-idf/Potentio_ESP/main/uart_user.c:44:15: warning: unused variable 'ret' [-Wunused-variable]
   44 |     esp_err_t ret;
      |               ^~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable Potentio_ESP.elf
[6/8] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/GIT/esp32-idf/Potentio_ESP/build/Potentio_ESP.bin
[7/8] cmd.exe /C "cd /D D:\GIT\esp32-idf\Potentio_ESP\build\esp-idf\esptool_py && D:\ESP_IDF_V5_1\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/GIT/esp32-idf/Potentio_ESP/build/partition_table/partition-table.bin D:/GIT/esp32-idf/Potentio_ESP/build/Potentio_ESP.bin"
Potentio_ESP.bin binary size 0xc19e0 bytes. Smallest app partition is 0x100000 bytes. 0x3e620 bytes (24%) free.
[7/8] cmd.exe /C "cd /D D:\ESP_IDF_V5_1\Espressif\frameworks\esp-idf-v5.1\components\esptool_py && D:\ESP_IDF_V5_1\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1 -D SERIAL_TOOL=D:/ESP_IDF_V5_1/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/GIT/esp32-idf/Potentio_ESP/build -P D:/ESP_IDF_V5_1/Espressif/frameworks/esp-idf-v5.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 Potentio_ESP.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port COM4
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 34:98:7a:6e:e9:28
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d1fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16668...
Writing at 0x00001000... (50 %)
Writing at 0x0000769b... (100 %)
Wrote 26640 bytes (16668 compressed) at 0x00001000 in 0.7 seconds (effective 288.7 kbit/s)...
Hash of data verified.
Compressed 793056 bytes to 469121...
Writing at 0x00010000... (3 %)
Writing at 0x0001dd9b... (6 %)
Writing at 0x0002ad01... (10 %)
Writing at 0x0003758c... (13 %)
Writing at 0x0003ccac... (17 %)
Writing at 0x00042baa... (20 %)
Writing at 0x0004818f... (24 %)
Writing at 0x0004de6d... (27 %)
Writing at 0x000534b7... (31 %)
Writing at 0x00058bd9... (34 %)
Writing at 0x0005e6dc... (37 %)
Writing at 0x00063e17... (41 %)
Writing at 0x0006a4ce... (44 %)
Writing at 0x00070385... (48 %)
Writing at 0x000764e2... (51 %)
Writing at 0x0007c08a... (55 %)
Writing at 0x00081e6e... (58 %)
Writing at 0x00087d62... (62 %)
Writing at 0x0008dc05... (65 %)
Writing at 0x00093fb2... (68 %)
Writing at 0x00099e27... (72 %)
Writing at 0x0009ffb4... (75 %)
Writing at 0x000a5a98... (79 %)
Writing at 0x000ab14e... (82 %)
Writing at 0x000b1aaa... (86 %)
Writing at 0x000ba259... (89 %)
Writing at 0x000c20a3... (93 %)
Writing at 0x000c8137... (96 %)
Writing at 0x000cdbcf... (100 %)
Wrote 793056 bytes (469121 compressed) at 0x00010000 in 10.9 seconds (effective 580.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 347.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
